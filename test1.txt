@echo off
setlocal enabledelayedexpansion

REM Set the root directory to start traversal
set "ROOT_DIR=C:\path\to\start"

echo [START] Starting traversal at "%ROOT_DIR%"
echo.

REM Start recursive traversal from ROOT_DIR
call :traverse "%ROOT_DIR%"
echo.
echo [END] Finished traversal.
goto :eof

REM Subroutine to recursively traverse folders
:traverse
setlocal
set "CURRENT_DIR=%~1"

for %%I in ("%CURRENT_DIR%") do set "FOLDER_NAME=%%~nxI"

echo [TRACE] Entering folder "%CURRENT_DIR%" (Name: "!FOLDER_NAME!")

REM Check if folder is named A or B and process accordingly
if /i "!FOLDER_NAME!"=="A" (
    echo [INFO] Folder named "A" found at "%CURRENT_DIR%", processing Excel-only subfolders...
    endlocal
    call :process_excel_only "%CURRENT_DIR%"
    goto :eof
) else if /i "!FOLDER_NAME!"=="B" (
    echo [INFO] Folder named "B" found at "%CURRENT_DIR%", processing Excel-only subfolders...
    endlocal
    call :process_excel_only "%CURRENT_DIR%"
    goto :eof
)

REM Otherwise, recurse into subfolders
for /d %%D in ("%CURRENT_DIR%\*") do (
    endlocal
    call :traverse "%%D"
    setlocal enabledelayedexpansion
)
endlocal & goto :eof

REM Subroutine: process Excel-only folders under A or B folder trees
:process_excel_only
setlocal enabledelayedexpansion
set "DIR=%~1"

echo [TRACE] Processing folder "%DIR%" for Excel-only check

REM Recursively process subfolders first
for /d %%S in ("%DIR%\*") do (
    endlocal
    call :process_excel_only "%%S"
    setlocal enabledelayedexpansion
)

REM Check if this folder contains only Excel files and no subfolders
call :folder_excel_only "%DIR%"
if %ERRORLEVEL%==0 (
    echo [EXECUTE] Folder "%DIR%" contains only Excel files, executing commands...
    pushd "%DIR%"
    REM === Multi-line commands start ===
    echo Running command 1 in %DIR%
    REM Add your actual commands below
    echo Running command 2 in %DIR%
    REM === Multi-line commands end ===
    popd
) else (
    echo [SKIP] Folder "%DIR%" does NOT qualify as Excel-only, skipping commands
)
endlocal & goto :eof

REM Subroutine: check if folder contains only Excel files and no subfolders
:folder_excel_only
setlocal enabledelayedexpansion
set "CHECK_DIR=%~1"
set "HAS_SUBFOLDER=false"
set "HAS_OTHER_FILES=false"
set "HAS_EXCEL_FILES=false"

REM Check for subfolders
for /d %%D in ("%CHECK_DIR%\*") do (
    set "HAS_SUBFOLDER=true"
    echo [DEBUG] Subfolder detected: %%D
    goto :folder_excel_only_end
)

REM Check all files in the folder
for %%F in (%CHECK_DIR%\*) do (
    if exist "%%F" (
        set "EXT=%%~xF"
        if /i "%%~xF"==".xls"  set "HAS_EXCEL_FILES=true" & goto :filecheck_continue
        if /i "%%~xF"==".xlsx" set "HAS_EXCEL_FILES=true" & goto :filecheck_continue
        if /i "%%~xF"==".xlsm" set "HAS_EXCEL_FILES=true" & goto :filecheck_continue
        set "HAS_OTHER_FILES=true"
        echo [DEBUG] Non-Excel file detected: %%F
        goto :folder_excel_only_end
    )
    :filecheck_continue
)

:folder_excel_only_end
if "!HAS_SUBFOLDER!"=="true" (
    echo [RESULT] Folder "%CHECK_DIR%" rejected: contains subfolders
    endlocal & exit /b 1
) else if "!HAS_OTHER_FILES!"=="true" (
    echo [RESULT] Folder "%CHECK_DIR%" rejected: contains non-Excel files
    endlocal & exit /b 1
) else if "!HAS_EXCEL_FILES!"=="true" (
    echo [RESULT] Folder "%CHECK_DIR%" accepted: contains only Excel files
    endlocal & exit /b 0
) else (
    echo [RESULT] Folder "%CHECK_DIR%" rejected: no files found
    endlocal & exit /b 1
)
