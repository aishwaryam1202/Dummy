@echo off
setlocal enabledelayedexpansion

REM Set the root directory to start traversal
set "ROOT_DIR=C:\path\to\start"

echo [START] Starting traversal at "%ROOT_DIR%"
echo.

REM Start recursive traversal from ROOT_DIR
call :traverse "%ROOT_DIR%"
echo.
echo [END] Finished traversal.
goto :eof

REM Subroutine: recursively traverse all folders beginning from given path
:traverse
setlocal enabledelayedexpansion
set "CURRENT_DIR=%~1"

for %%I in ("%CURRENT_DIR%") do set "FOLDER_NAME=%%~nxI"

echo [TRACE] Entering folder "!CURRENT_DIR!" (Name: "!FOLDER_NAME!")

REM If current folder name is A or B, start Excel-only processing with that context
if /i "!FOLDER_NAME!"=="A" (
    echo [INFO] Found folder "A" at "!CURRENT_DIR!", processing Excel-only subfolders in A tree...
    endlocal
    call :process_excel_only_recursive "%CURRENT_DIR%" "A"
    goto :eof
) else if /i "!FOLDER_NAME!"=="B" (
    echo [INFO] Found folder "B" at "!CURRENT_DIR!", processing Excel-only subfolders in B tree...
    endlocal
    call :process_excel_only_recursive "%CURRENT_DIR%" "B"
    goto :eof
)

REM Otherwise recurse into subfolders without parent type context
for /d %%D in ("!CURRENT_DIR!\*") do (
    endlocal
    call :traverse "%%D"
    setlocal enabledelayedexpansion
)
endlocal
goto :eof

REM Subroutine: recursively process Excel-only folders under A or B folder trees
REM Parameters:
REM     %1 = current folder path
REM     %2 = parent type context: "A" or "B"
:process_excel_only_recursive
setlocal enabledelayedexpansion
set "DIR=%~1"
set "PARENT_TYPE=%~2"

echo [RECURSIVE] Processing folder "%DIR%" (parent type: %PARENT_TYPE%)

REM Recurse into subfolders first, passing same parent type
for /d %%S in ("%DIR%\*") do (
    endlocal
    call :process_excel_only_recursive "%%S" "%PARENT_TYPE%"
    setlocal enabledelayedexpansion
)

REM Check if folder contains only Excel files and no subfolders
call :folder_excel_only "%DIR%"
if errorlevel 1 (
    echo [SKIP] Folder "%DIR%" is NOT Excel-only, skipping.
) else (
    echo [EXECUTE] Folder "%DIR%" is Excel-only under "%PARENT_TYPE%", renaming files and applying post-action.
    pushd "%DIR%"

    REM Rename Excel files to QWE.xlsx, QWE_2.xlsx, ...
    set counter=0
    for %%F in (*.xls *.xlsx *.xlsm) do (
        set /a counter+=1
        if !counter! EQU 1 (
            ren "%%F" "QWE.xlsx"
            echo [ACTION] Renamed "%%F" to "QWE.xlsx"
        ) else (
            ren "%%F" "QWE_!counter!.xlsx"
            echo [ACTION] Renamed "%%F" to "QWE_!counter!.xlsx"
        )
    )

    popd

    REM Post-action based on type
    if /i "%PARENT_TYPE%"=="A" (
        echo [ACTION] Deleting folder "%DIR%" because under 'A'
        rd /s /q "%DIR%"
        echo [INFO] Deleted folder: "%DIR%"
    ) else if /i "%PARENT_TYPE%"=="B" (
        set "DEST_FOLDER=%DIR%_copy"

        REM Remove existing copy folder if any
        if exist "%DEST_FOLDER%" (
            echo [INFO] Removing existing duplicate folder "%DEST_FOLDER%"
            rd /s /q "%DEST_FOLDER%"
        )

        echo [ACTION] Copying folder "%DIR%" to "%DEST_FOLDER%"
        xcopy "%DIR%" "%DEST_FOLDER%" /e /i /q >nul
        echo [INFO] Created duplicate folder: "%DEST_FOLDER%"
    )
)

endlocal & goto :eof

REM Subroutine: check if folder contains only Excel files (xls, xlsx, xlsm) and no subfolders
REM Returns 0 if folder qualifies, else 1
:folder_excel_only
setlocal enabledelayedexpansion
set "CHECK_DIR=%~1"
set "HAS_SUBFOLDER=false"
set "HAS_OTHER_FILES=false"
set "HAS_EXCEL_FILES=false"

REM Check for subfolders
for /d %%D in ("%CHECK_DIR%\*") do (
    set "HAS_SUBFOLDER=true"
    echo [DEBUG] Subfolder found: %%D
    goto :folder_excel_only_end
)

REM Check all files
for %%F in (%CHECK_DIR%\*) do (
    if exist "%%F" (
        set "EXT=%%~xF"
        if /i "%%~xF"==".xls"  set "HAS_EXCEL_FILES=true" & goto :file_check_continue
        if /i "%%~xF"==".xlsx" set "HAS_EXCEL_FILES=true" & goto :file_check_continue
        if /i "%%~xF"==".xlsm" set "HAS_EXCEL_FILES=true" & goto :file_check_continue
        set "HAS_OTHER_FILES=true"
        echo [DEBUG] Non-Excel file found: %%F
        goto :folder_excel_only_end
    )
    :file_check_continue
)

:folder_excel_only_end
if "!HAS_SUBFOLDER!"=="true" (
    echo [RESULT] Folder "%CHECK_DIR%" rejected: contains subfolders
    endlocal & exit /b 1
) else if "!HAS_OTHER_FILES!"=="true" (
    echo [RESULT] Folder "%CHECK_DIR%" rejected: contains non-Excel files
    endlocal & exit /b 1
) else if "!HAS_EXCEL_FILES!"=="true" (
    echo [RESULT] Folder "%CHECK_DIR%" accepted: contains only Excel files
    endlocal & exit /b 0
) else (
    echo [RESULT] Folder "%CHECK_DIR%" rejected: no files found
    endlocal & exit /b 1
)
